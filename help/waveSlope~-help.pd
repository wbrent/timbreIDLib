#N canvas 225 139 1068 637 10;
#X declare -lib timbreIDLib;
#X obj 4 4 cnv 10 400 10 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 4 4 cnv 10 10 400 empty empty empty 20 12 0 14 -233017 -66577
0;
#X msg 189 303 window 2000;
#X text 286 303 Change analysis window size;
#X obj 129 145 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 200 191 Bang repeatedly...;
#X obj 176 192 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 127 126 Bang to output slope;
#X text 765 555 Updated for timbreIDLib version 0.7;
#N canvas 673 234 654 397 other-settings 0;
#X obj 53 54 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X msg 53 72 normalize \$1;
#X obj 53 331 outlet;
#X msg 175 201 print;
#X text 225 203 Print current settings in the post window;
#X msg 121 149 overlap 2;
#X text 202 137 Inside a subpatch with re-blocking involving overlap
(e.g. \, [block~ 4096 2]) \, you'll need to change the overlap for
things to behave properly;
#X text 159 64 Normalize the waveform in the analysis window so that
the peak amplitude is 1 (default: OFF);
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 5 0 2 0;
#X restore 232 358 pd other-settings;
#X text 591 369 This feature can be sent to the timbreID external in
order to identify timbres in real time. For more on using audio features
for classification \, see the timbreID helpfile:;
#X obj 773 433 timbreID;
#N canvas 0 50 450 278 (subpatch) 0;
#X array \$0-slope-graph 2 float 1;
#A 0 -9.3408e-05 9.3408e-05;
#X coords 0 0.075 1 -0.075 200 140 1 0 0;
#X restore 351 93 graph;
#N canvas 654 581 677 360 graph-slope 0;
#X obj 114 125 nbx 7 32 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 32
-262144 -1 -1 0 256;
#X obj 114 55 inlet;
#X msg 538 242 1;
#X obj 403 227 / 2;
#X obj 403 267 tabwrite \$0-slope-graph;
#X obj 403 205 t f b;
#X obj 193 267 tabwrite \$0-slope-graph;
#X obj 193 205 t f b;
#X obj 193 227 / -2;
#X msg 328 242 0;
#X connect 1 0 0 0;
#X connect 1 0 7 0;
#X connect 1 0 5 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X connect 5 1 2 0;
#X connect 7 0 8 0;
#X connect 7 1 9 0;
#X connect 8 0 6 0;
#X connect 9 0 6 1;
#X coords 0 -1 1 1 250 70 1 100 100;
#X restore 64 471 pd graph-slope;
#X obj 64 105 *~;
#X obj 135 76 line~;
#X obj 176 211 metro 20;
#X obj 64 45 osc~ 5000;
#X text 591 222 With a real signal \, quiet moments between sound events
will produce erratic slope reports that constantly change between very
small positive and negative values \, so it's usually best to have
a basic amplitude threshold before analysis.;
#X text 765 575 July 2017;
#X msg 135 34 1 1000;
#X msg 145 54 0 1000;
#X obj 64 417 waveSlope~ 4096;
#X text 592 27 Waveform slope is the slope of the best-fit line through
the absolute value of samples in the analysis window. When waveSlope~
receives a bang \, it spits out the waveform slope for the most recent
analysis window. One use for this feature is to segment a sound event
with a clear attack into attack \, decay \, and sustain portions. While
the slope is positive \, the attack portion of the event is still ongoing.
When slope suddenly turns negative \, the initial decay into the sustain
portion of the event has begun. When slope is very near zero \, the
sound event is sustaining at a steady amplitude. At left \, try triggering
the 1-second attack and watch the slope change. Once the attack is
done \, slope settles at nearly zero. Then you can trigger the 1-second
release.;
#X text 591 292 Audio buffering is taken care of by the external \,
so there is no need for [block~]. You can set the window size with
a creation argument \, or change it with the "window" message. Window
size is not required to be a power of two.;
#X obj 766 601 declare -lib timbreIDLib;
#X connect 2 0 22 0;
#X connect 4 0 22 0;
#X connect 6 0 16 0;
#X connect 9 0 22 0;
#X connect 14 0 22 0;
#X connect 15 0 14 1;
#X connect 16 0 22 0;
#X connect 17 0 14 0;
#X connect 20 0 15 0;
#X connect 21 0 15 0;
#X connect 22 0 13 0;
