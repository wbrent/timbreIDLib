#N canvas 306 81 952 583 10;
#X declare -lib timbreIDLib;
#X obj 108 132 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-bfcc-graph 50 float 0;
#X coords 0 1 49 -1 200 140 1 0 0;
#X restore 483 296 graph;
#X obj 137 171 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 4 4 cnv 10 400 10 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 4 4 cnv 10 10 400 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 442 81 874 725 other-settings 0;
#X obj 54 86 hradio 15 1 0 5 empty empty empty 0 -8 0 10 -262144 -1
-1 4;
#X msg 54 106 window_function \$1;
#X obj 110 148 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 110 166 normalize \$1;
#X msg 153 226 power_spectrum \$1;
#X obj 153 208 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 54 655 outlet;
#X text 312 293 Construct a new filterbank with a specific spacing.
;
#X text 216 166 Normalize spectrum (default: ON);
#X text 294 226 Use power spectrum. (default: magnitude);
#X msg 385 549 print;
#X obj 263 366 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 263 386 spec_band_avg \$1;
#X obj 293 426 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 293 446 filter_avg \$1;
#X text 289 334 Rather than sum energy in the triangular Bark spaced
filters to get the amount of energy in each Bark band \, you can average
energy in the unfiltered bins. (default: OFF);
#X text 319 414 If using the triangular Bark spaced filters \, you
can either sum or average the energy in each filter .(default: sum)
;
#X text 435 551 Print current settings in the post window;
#X text 52 49 Change windowing function. Rectangular (0) \, Blackman
(1) \, Cosine (2) \, Hamming (3) \, or Hann (4). (default: Blackman)
;
#X msg 331 497 overlap 2;
#X text 412 485 Inside a subpatch with re-blocking involving overlap
(e.g. \, [block~ 4096 2]) \, you'll need to change the overlap for
things to behave properly;
#X msg 212 293 filterbank 1;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X connect 12 0 6 0;
#X connect 13 0 14 0;
#X connect 14 0 6 0;
#X connect 19 0 6 0;
#X connect 21 0 6 0;
#X restore 217 300 pd other-settings;
#X obj 57 72 adc~;
#X text 55 495 Updated for timbreIDLib version 0.7;
#X msg 173 243 window 2000;
#X text 255 243 Change analysis window size;
#X text 196 374 Creation arguments are window size in samples and filterbank
spacing in Barks, f 28;
#X obj 648 516 timbreID;
#X text 161 170 Bang repeatedly to keep refreshing...;
#X text 481 461 This feature can be sent to the timbreID external in
order to identify timbres in real time. For more on using audio features
for classification \, see the timbreID helpfile:;
#X obj 137 190 metro 100;
#X obj 57 387 bfcc~ 1024 0.5;
#X text 105 115 Bang to output BFCCs as a list;
#X text 55 515 July 2017;
#X text 481 27 Bark-frequency cepstrum is much different than raw cepstrum.
The most significant differences are an emphasis on lower spectral
content and the use of a DCT rather than a FT in the final step of
the process. When bfcc~ receives a bang \, it spits out the BFCCs for
the most recent analysis window as a list. The default half-Bark filterbank
spacing produces a 50-component BFCC vector regardless of window size.
BFCC components are normalized to be between 1 and -1 by default. If
normalized \, the first BFCC will always have a value of 1;
#X text 481 171 Audio buffering and windowing are taken care of by
the external \, so there is no need for tabreceive~ or block~. You
can set the window size with a creation argument \, or change it with
the "window" message. Window size is not required to be a power of
two. The second creation argument specifies the Bark spacing of the
filterbank.;
#N canvas 0 81 450 300 plotting 0;
#X obj 57 193 list prepend 0;
#X obj 192 158 list length;
#X obj 192 180 change;
#X obj 57 99 t l l;
#X obj 192 202 pack f \$0;
#X msg 192 225 \; \$2-bfcc-graph resize \$1 \;;
#X obj 57 215 s \$0-bfcc-graph;
#X obj 57 59 inlet;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 0 0;
#X connect 3 1 1 0;
#X connect 4 0 5 0;
#X connect 7 0 3 0;
#X restore 57 437 pd plotting;
#X obj 57 535 declare -lib timbreIDLib;
#X connect 0 0 15 0;
#X connect 2 0 14 0;
#X connect 5 0 15 0;
#X connect 6 0 15 0;
#X connect 8 0 15 0;
#X connect 14 0 15 0;
#X connect 15 0 20 0;
