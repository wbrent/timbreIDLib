#N canvas 244 81 884 737 10;
#X declare -lib timbreID/timbreIDLib;
#X obj 51 289 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-waveform 1024 float 0;
#X coords 0 1 1023 -1 200 140 1 0 0;
#X restore 48 48 graph;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-barkSpec-graph 50 float 0;
#X coords 0 0.35 49 0 200 140 1 0 0;
#X restore 294 48 graph;
#X text 73 286 Bang to analyze the entire array.;
#N canvas 666 270 552 163 soundfile 0;
#X obj 50 83 soundfiler;
#X msg 50 58 read -skip 120000 ./audio/testing.wav \$1-sample;
#X obj 50 14 loadbang;
#X obj 50 36 f \$0;
#X obj 185 100 table \$0-sample 130000;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 490 457 pd soundfile;
#N canvas 723 239 304 333 waveform 0;
#X obj 46 61 inlet;
#X obj 46 82 t f f;
#X obj 91 131 + 1023;
#X msg 46 200 copy_range 0 \$3-sample \$1 \$2;
#X obj 46 241 tabletool \$0-waveform;
#X obj 46 164 pack f f \$0;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 2 0;
#X connect 2 0 5 1;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X restore 490 509 pd waveform;
#X obj 51 244 hsl 800 25 0 128000 0 0 \$0-scrub-bar empty Scrub-bar
-2 -8 0 12 -191407 -1 -1 0 1;
#X obj 4 4 cnv 10 400 10 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 4 4 cnv 10 10 400 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 50 450 278 (subpatch) 0;
#X array \$0-slope-graph 2 float 1;
#A 0 0.0101847 -0.0101847;
#X coords 0 0.08 1 -0.08 200 140 1 0 0;
#X restore 544 48 graph;
#X obj 134 386 r \$0-scrub-bar;
#X msg 99 334 analyze 44100 2000;
#X text 247 327 Analyze a window starting at sample 44100 that is 2000
samples long (samples 44100 - 46099), f 47;
#X msg 134 411 analyze \$1 1024;
#X obj 490 487 r \$0-scrub-bar;
#X text 269 590 Creation arguments are the name of the sample array
to read from \, and filterbank spacing in Barks;
#X text 626 371 See the real-time version for more information on Bark
spectrum slope in general., f 33;
#X obj 628 420 barkSpecSlope~;
#X obj 51 597 barkSpecSlope \$0-sample 0.5;
#N canvas 654 581 895 386 graph-slope-measure-barkSpec 0;
#X obj 114 125 nbx 7 32 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 32
-262144 -1 -1 0 256;
#X obj 114 55 inlet;
#X msg 538 242 1;
#X obj 403 227 / 2;
#X obj 403 267 tabwrite \$0-slope-graph;
#X obj 403 205 t f b;
#X obj 193 267 tabwrite \$0-slope-graph;
#X obj 193 205 t f b;
#X obj 193 227 / -2;
#X msg 328 242 0;
#X obj 640 228 list prepend 0;
#X obj 640 250 s \$0-barkSpec-graph;
#X obj 640 184 barkSpec \$0-sample 0.5;
#X obj 640 63 r \$0-analyze;
#X connect 1 0 0 0;
#X connect 1 0 7 0;
#X connect 1 0 5 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X connect 5 1 2 0;
#X connect 7 0 8 0;
#X connect 7 1 9 0;
#X connect 8 0 6 0;
#X connect 9 0 6 1;
#X connect 10 0 11 0;
#X connect 12 0 10 0;
#X connect 13 0 12 0;
#X coords 0 -1 1 1 250 70 1 100 100;
#X restore 51 633 pd graph-slope-measure-barkSpec;
#N canvas 603 112 803 674 other-settings 0;
#X obj 44 56 hradio 15 1 0 5 empty empty empty 0 -8 0 10 -262144 -1
-1 4;
#X msg 44 76 window_function \$1;
#X obj 100 138 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 100 156 normalize \$1;
#X msg 140 208 set another-sample-array;
#X msg 179 264 samplerate 48000;
#X text 328 207 Read from a different array;
#X msg 205 317 power_spectrum \$1;
#X obj 205 299 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 44 625 outlet;
#X text 342 361 Construct a new filterbank with a specific spacing.
;
#X text 206 156 Normalize spectrum (default: ON);
#X text 313 263 Specify your sample's sampling rate. (default: 44100)
;
#X text 346 317 Use power spectrum. (default: magnitude);
#X msg 369 546 print;
#X text 42 19 Change windowing function. Rectangular (0) \, Blackman
(1) \, Cosine (2) \, Hamming (3) \, or Hann (4). (default: Blackman)
;
#X obj 287 426 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 287 446 spec_band_avg \$1;
#X obj 317 486 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 317 506 filter_avg \$1;
#X text 419 548 Print current settings in the post window;
#X msg 242 361 filterbank 1;
#X text 343 474 If using the triangular Bark spaced filters \, you
can either sum or average the energy in each filter (default: sum)
;
#X text 313 394 Rather than sum energy in the triangular Bark spaced
filters to get the amount of energy in each Bark band \, you can average
energy in the unfiltered bins (default: OFF);
#X text 176 106 Change internal window size setting;
#X msg 74 106 window 2000;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 4 0 9 0;
#X connect 5 0 9 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 14 0 9 0;
#X connect 16 0 17 0;
#X connect 17 0 9 0;
#X connect 18 0 19 0;
#X connect 19 0 9 0;
#X connect 21 0 9 0;
#X connect 25 0 9 0;
#X restore 196 500 pd other-settings;
#X obj 51 453 s \$0-analyze;
#X obj 51 513 r \$0-analyze;
#X text 259 389 Use the slider above to move through the audio file
, f 29;
#X text 649 662 Updated for timbreIDLib version 0.7.6;
#X text 649 682 August 2018;
#N canvas 351 117 1043 508 chain_messages 0;
#X msg 563 139 chain_fftData <data>;
#X msg 643 229 chain_magSpec <data>;
#X obj 427 463 outlet;
#X obj 34 159 adc~;
#X obj 34 213 tID_fft~;
#X obj 34 251 list append;
#X obj 34 310 list prepend chain_fftData;
#X obj 34 328 list trim;
#X obj 64 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 219 287 Prepend the "chain_fftData" message in front of the
analysis data \, then trim off the list selector to make it a message
to timbreID analysis objects., f 33;
#X text 132 192 [tID_fft~] outputs (N/2)+1 real values from the left
outlet \, and (N/2)+1 imaginary values from the right. The imaginary
values are appended to the real ones to form one long list (N+2 values
total) of complex frequency domain data., f 50;
#X text 718 138 fftData <data> should consist of (window/2)+1 real
values and (window/2)+1 imaginary values \, packaged together as one
long list., f 31;
#X text 791 222 magSpec <data> should consist of (window/2)+1 magnitudes
, f 25;
#X msg 723 299 chain_barkSpec <data>;
#X text 559 25 The object in this help file accepts the chain_ messages
listed below \, which should be followed by the associated data as
a single list. In practice \, these messages are prepended to analysis
results via [list prepend] \, followed by a [list trim] to remove the
list selector. This is illustrated in the example at left.;
#X text 98 15 To minimize redundant calculations on the same window
of audio \, most of timbreID's non-real-time analysis objects have
various chain_ methods. For example \, because many types of analysis
start with an FFT \, it is more efficient to do a single FFT at the
start of an analysis chain \, and pass the results to other analysis
objects that require FFT data. chain_ methods make it possible to bypass
various steps of the analysis calculation if the data is already available.
Here \, note that the FFT data originated with a real-time analysis
object \, but non-real-time objects can be used for consequent chain_
calculations.;
#X text 757 331 barkSpec <data> should consist of 50 Bark spectrum
energy values at the default Bark filterbank spacing of 0.5. The length
of this list will change depending on filterbank spacing., f 30;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 5 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 8 0 4 0;
#X connect 13 0 2 0;
#X restore 226 530 pd chain_messages;
#X obj 651 705 declare -lib timbreID/timbreIDLib;
#X connect 0 0 21 0;
#X connect 10 0 13 0;
#X connect 11 0 21 0;
#X connect 13 0 21 0;
#X connect 14 0 5 0;
#X connect 18 0 19 0;
#X connect 20 0 18 0;
#X connect 22 0 18 0;
#X connect 26 0 18 0;
